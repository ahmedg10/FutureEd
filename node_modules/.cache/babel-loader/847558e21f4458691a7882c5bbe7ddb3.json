{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedghaddah/Desktop/info340/project-pigalvin/src/Components/surveyQuestion.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SurveyQuestion(props) {\n  let questionList = [];\n\n  for (let i = 0; i < Object.keys(props.questions).length; i++) {\n    let question = props.questions[i];\n    let idName = \"Q\" + (i + 1);\n    questionList.push( /*#__PURE__*/_jsxDEV(\"label\", {\n      id: idName,\n      htmlFor: idName,\n      children: question\n    }, idName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 27\n    }, this));\n    questionList.push( /*#__PURE__*/_jsxDEV(RenderOptions, {\n      idName: idName,\n      options: props.options[i],\n      answers: props.answers,\n      setAnswers: props.setAnswers,\n      index: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 27\n    }, this));\n  }\n\n  return questionList;\n}\n_c = SurveyQuestion;\n\nfunction RenderOptions(props) {\n  const handleSelect = event => {\n    props.answers[props.index] = event.target.value;\n    props.setAnswers(props.answers);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      id: props.idName,\n      className: \"d-inline-flex p-1\",\n      onChange: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EachOption, {\n        options: props.options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = RenderOptions;\n\nfunction EachOption(props) {\n  let optionList = [];\n\n  for (let i = 0; i < Object.keys(props.options).length; i++) {\n    const eachOption = props.options[i];\n    let value = i + 1;\n    optionList.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: value,\n      children: eachOption\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this));\n  }\n\n  return optionList;\n}\n\n_c3 = EachOption;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SurveyQuestion\");\n$RefreshReg$(_c2, \"RenderOptions\");\n$RefreshReg$(_c3, \"EachOption\");","map":{"version":3,"names":["React","SurveyQuestion","props","questionList","i","Object","keys","questions","length","question","idName","push","options","answers","setAnswers","RenderOptions","handleSelect","event","index","target","value","EachOption","optionList","eachOption"],"sources":["/Users/ahmedghaddah/Desktop/info340/project-pigalvin/src/Components/surveyQuestion.js"],"sourcesContent":["import React from 'react';\n\nexport function SurveyQuestion(props) {\n    let questionList = [];\n    for (let i = 0; i < Object.keys(props.questions).length; i++) {\n        let question = props.questions[i];\n        let idName = \"Q\" + (i + 1);\n        questionList.push(<label id={idName} htmlFor={idName} key={idName}>{question}</label>);\n        questionList.push(<RenderOptions key={i} idName={idName} options={props.options[i]} answers={props.answers} setAnswers={props.setAnswers} index={i} />);\n    }\n    return questionList;\n}\n\nfunction RenderOptions(props) {\n    const handleSelect = (event) => {\n\n        props.answers[props.index] = event.target.value;\n        props.setAnswers(props.answers);\n    };\n\n    return (\n        <div className=\"col-auto\">\n            <select id={props.idName} className='d-inline-flex p-1' onChange={handleSelect}>\n                <option value=\"0\">Select</option>\n                <EachOption options={props.options} />\n            </select>\n        </div>\n    )\n}\n\nfunction EachOption(props) {\n    let optionList = [];\n\n    for (let i = 0; i < Object.keys(props.options).length; i++) {\n        const eachOption = props.options[i];\n        let value = i + 1;\n        optionList.push(<option key={i} value={value}>{eachOption}</option>)\n    }\n    return optionList;\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAIC,YAAY,GAAG,EAAnB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACK,SAAlB,EAA6BC,MAAjD,EAAyDJ,CAAC,EAA1D,EAA8D;IAC1D,IAAIK,QAAQ,GAAGP,KAAK,CAACK,SAAN,CAAgBH,CAAhB,CAAf;IACA,IAAIM,MAAM,GAAG,OAAON,CAAC,GAAG,CAAX,CAAb;IACAD,YAAY,CAACQ,IAAb,eAAkB;MAAO,EAAE,EAAED,MAAX;MAAmB,OAAO,EAAEA,MAA5B;MAAA,UAAkDD;IAAlD,GAAyCC,MAAzC;MAAA;MAAA;MAAA;IAAA,QAAlB;IACAP,YAAY,CAACQ,IAAb,eAAkB,QAAC,aAAD;MAAuB,MAAM,EAAED,MAA/B;MAAuC,OAAO,EAAER,KAAK,CAACU,OAAN,CAAcR,CAAd,CAAhD;MAAkE,OAAO,EAAEF,KAAK,CAACW,OAAjF;MAA0F,UAAU,EAAEX,KAAK,CAACY,UAA5G;MAAwH,KAAK,EAAEV;IAA/H,GAAoBA,CAApB;MAAA;MAAA;MAAA;IAAA,QAAlB;EACH;;EACD,OAAOD,YAAP;AACH;KATeF,c;;AAWhB,SAASc,aAAT,CAAuBb,KAAvB,EAA8B;EAC1B,MAAMc,YAAY,GAAIC,KAAD,IAAW;IAE5Bf,KAAK,CAACW,OAAN,CAAcX,KAAK,CAACgB,KAApB,IAA6BD,KAAK,CAACE,MAAN,CAAaC,KAA1C;IACAlB,KAAK,CAACY,UAAN,CAAiBZ,KAAK,CAACW,OAAvB;EACH,CAJD;;EAMA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,uBACI;MAAQ,EAAE,EAAEX,KAAK,CAACQ,MAAlB;MAA0B,SAAS,EAAC,mBAApC;MAAwD,QAAQ,EAAEM,YAAlE;MAAA,wBACI;QAAQ,KAAK,EAAC,GAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,UAAD;QAAY,OAAO,EAAEd,KAAK,CAACU;MAA3B;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;MAfQG,a;;AAiBT,SAASM,UAAT,CAAoBnB,KAApB,EAA2B;EACvB,IAAIoB,UAAU,GAAG,EAAjB;;EAEA,KAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACU,OAAlB,EAA2BJ,MAA/C,EAAuDJ,CAAC,EAAxD,EAA4D;IACxD,MAAMmB,UAAU,GAAGrB,KAAK,CAACU,OAAN,CAAcR,CAAd,CAAnB;IACA,IAAIgB,KAAK,GAAGhB,CAAC,GAAG,CAAhB;IACAkB,UAAU,CAACX,IAAX,eAAgB;MAAgB,KAAK,EAAES,KAAvB;MAAA,UAA+BG;IAA/B,GAAanB,CAAb;MAAA;MAAA;MAAA;IAAA,QAAhB;EACH;;EACD,OAAOkB,UAAP;AACH;;MATQD,U"},"metadata":{},"sourceType":"module"}