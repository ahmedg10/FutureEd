{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedghaddah/Desktop/info340/project-pigalvin/src/Components/CompareChart.js\";\nimport React from 'react';\nimport Chart from 'react-google-charts'; // The props should pass the data of a list of selected colleges.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CompareChart(props) {\n  let selectedColleges = props.selectedColleges[0];\n  let totalCollegeList = props.totalCollegeList;\n  let collegeNames = [];\n  let inStateTuititions = [];\n  let outStateTuititions = [];\n  let result = totalCollegeList.map(college => {\n    if (selectedColleges === college.name) {\n      collegeNames.push(college.name);\n      inStateTuititions.push(college.inStateTuition);\n      outStateTuititions.push(college.outStateTuition);\n      return [collegeNames, inStateTuititions, outStateTuititions];\n    } else {\n      return null;\n    }\n  });\n  let HistogramData = [[\"collegeNames\", \"inStateTuititions\", \"outStateTuititions\"], [collegeNames[0], inStateTuititions[0], outStateTuititions[0]]];\n  const chartOptions = {\n    title: 'Comparing the colleges',\n    colors: ['#5C3292', '#1A8763', '#871B47', '#999999']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare result:(defalut seting for now, will be able to compare by selecting colleges)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: \"100%\",\n      height: \"400px\",\n      chartType: \"Bar\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this),\n      data: HistogramData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = CompareChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompareChart\");","map":{"version":3,"names":["React","Chart","CompareChart","props","selectedColleges","totalCollegeList","collegeNames","inStateTuititions","outStateTuititions","result","map","college","name","push","inStateTuition","outStateTuition","HistogramData","chartOptions","title","colors"],"sources":["/Users/ahmedghaddah/Desktop/info340/project-pigalvin/src/Components/CompareChart.js"],"sourcesContent":["import React from 'react';\nimport Chart from 'react-google-charts';\n\n// The props should pass the data of a list of selected colleges.\nexport function CompareChart(props) {\n  let selectedColleges = props.selectedColleges[0];\n  let totalCollegeList = props.totalCollegeList;\n  let collegeNames = [];\n  let inStateTuititions = [];\n  let outStateTuititions = [];\n\n  let result = totalCollegeList.map(college => {\n    if (selectedColleges === college.name) {\n      collegeNames.push(college.name);\n      inStateTuititions.push(college.inStateTuition);\n      outStateTuititions.push(college.outStateTuition);\n\n      return ([collegeNames, inStateTuititions, outStateTuititions]);\n    } else {\n      return null;\n    }\n  });\n  let HistogramData = [\n    [\"collegeNames\", \"inStateTuititions\", \"outStateTuititions\"],\n    [collegeNames[0], inStateTuititions[0], outStateTuititions[0]]\n  ]\n  const chartOptions = {\n    title: 'Comparing the colleges',\n    colors: ['#5C3292', '#1A8763', '#871B47', '#999999'],\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>Compare result:(defalut seting for now, will be able to compare by selecting colleges)</h2>\n      <Chart\n        width='100%'\n        height='400px'\n        chartType=\"Bar\"\n        loader={<div>Loading Chart</div>}\n        data={HistogramData}\n        options={chartOptions}\n      />\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CAEA;;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAClC,IAAIC,gBAAgB,GAAGD,KAAK,CAACC,gBAAN,CAAuB,CAAvB,CAAvB;EACA,IAAIC,gBAAgB,GAAGF,KAAK,CAACE,gBAA7B;EACA,IAAIC,YAAY,GAAG,EAAnB;EACA,IAAIC,iBAAiB,GAAG,EAAxB;EACA,IAAIC,kBAAkB,GAAG,EAAzB;EAEA,IAAIC,MAAM,GAAGJ,gBAAgB,CAACK,GAAjB,CAAqBC,OAAO,IAAI;IAC3C,IAAIP,gBAAgB,KAAKO,OAAO,CAACC,IAAjC,EAAuC;MACrCN,YAAY,CAACO,IAAb,CAAkBF,OAAO,CAACC,IAA1B;MACAL,iBAAiB,CAACM,IAAlB,CAAuBF,OAAO,CAACG,cAA/B;MACAN,kBAAkB,CAACK,IAAnB,CAAwBF,OAAO,CAACI,eAAhC;MAEA,OAAQ,CAACT,YAAD,EAAeC,iBAAf,EAAkCC,kBAAlC,CAAR;IACD,CAND,MAMO;MACL,OAAO,IAAP;IACD;EACF,CAVY,CAAb;EAWA,IAAIQ,aAAa,GAAG,CAClB,CAAC,cAAD,EAAiB,mBAAjB,EAAsC,oBAAtC,CADkB,EAElB,CAACV,YAAY,CAAC,CAAD,CAAb,EAAkBC,iBAAiB,CAAC,CAAD,CAAnC,EAAwCC,kBAAkB,CAAC,CAAD,CAA1D,CAFkB,CAApB;EAIA,MAAMS,YAAY,GAAG;IACnBC,KAAK,EAAE,wBADY;IAEnBC,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC;EAFW,CAArB;EAKA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MACE,KAAK,EAAC,MADR;MAEE,MAAM,EAAC,OAFT;MAGE,SAAS,EAAC,KAHZ;MAIE,MAAM,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJV;MAKE,IAAI,EAAEH,aALR;MAME,OAAO,EAAEC;IANX;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;KAxCef,Y"},"metadata":{},"sourceType":"module"}