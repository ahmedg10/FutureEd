{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedghaddah/Desktop/info340/project-pigalvin/src/Components/CompareChart.js\";\nimport React from 'react';\nimport Chart from 'react-google-charts'; // The props should pass the data of a list of selected colleges.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CompareChart(props) {\n  let selectedColleges = props.selectedColleges;\n  let totalCollegeList = props.totalCollegeList;\n  let totalCollegeNameList = [];\n  totalCollegeList.forEach(college => {\n    totalCollegeNameList.push(college.name);\n  });\n  let collegeNames = [];\n  let inStateTuititions = [];\n  let outStateTuititions = [];\n  selectedColleges.forEach(college => {\n    if (totalCollegeNameList.includes(college.name)) {\n      collegeNames.push(college.name);\n      inStateTuititions.push(college.inStateTuition);\n      outStateTuititions.push(college.outStateTuition);\n    }\n  });\n  let HistogramData = [[\"Name of Colleges\", \"In-State-Tuitition\", \"Out-State-Tuitition\"]];\n\n  for (let i = 0; i < selectedColleges.length; i++) {\n    HistogramData.push([collegeNames[i], inStateTuititions[i], outStateTuititions[i]]);\n  }\n\n  const chartOptions = {\n    title: 'Comparing the tuition',\n    colors: ['#5C3292', '#1A8763', '#871B47', '#999999']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Compare Tuition Fee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: \"100%\",\n      height: \"400px\",\n      chartType: \"Bar\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this),\n      data: HistogramData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = CompareChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompareChart\");","map":{"version":3,"names":["React","Chart","CompareChart","props","selectedColleges","totalCollegeList","totalCollegeNameList","forEach","college","push","name","collegeNames","inStateTuititions","outStateTuititions","includes","inStateTuition","outStateTuition","HistogramData","i","length","chartOptions","title","colors"],"sources":["/Users/ahmedghaddah/Desktop/info340/project-pigalvin/src/Components/CompareChart.js"],"sourcesContent":["import React from 'react';\nimport Chart from 'react-google-charts';\n\n// The props should pass the data of a list of selected colleges.\nexport function CompareChart(props) {\n\n  let selectedColleges = props.selectedColleges;\n  let totalCollegeList = props.totalCollegeList;\n  let totalCollegeNameList = [];\n  totalCollegeList.forEach(college => {\n    totalCollegeNameList.push(college.name);\n  });\n\n  let collegeNames = [];\n  let inStateTuititions = [];\n  let outStateTuititions = [];\n\n  selectedColleges.forEach(college => {\n    if (totalCollegeNameList.includes(college.name)) {\n      collegeNames.push(college.name);\n      inStateTuititions.push(college.inStateTuition);\n      outStateTuititions.push(college.outStateTuition);\n    }})\n\n  let HistogramData = [\n    [\"Name of Colleges\", \"In-State-Tuitition\", \"Out-State-Tuitition\"]\n  ]\n  for (let i = 0; i < selectedColleges.length; i++) {\n    HistogramData.push([collegeNames[i], inStateTuititions[i], outStateTuititions[i]]);\n  }\n  const chartOptions = {\n    title: 'Comparing the tuition',\n    colors: ['#5C3292', '#1A8763', '#871B47', '#999999'],\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">Compare Tuition Fee</h1>\n      <Chart\n        width='100%'\n        height='400px'\n        chartType=\"Bar\"\n        loader={<div>Loading Chart</div>}\n        data={HistogramData}\n        options={chartOptions}\n      />\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CAEA;;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAElC,IAAIC,gBAAgB,GAAGD,KAAK,CAACC,gBAA7B;EACA,IAAIC,gBAAgB,GAAGF,KAAK,CAACE,gBAA7B;EACA,IAAIC,oBAAoB,GAAG,EAA3B;EACAD,gBAAgB,CAACE,OAAjB,CAAyBC,OAAO,IAAI;IAClCF,oBAAoB,CAACG,IAArB,CAA0BD,OAAO,CAACE,IAAlC;EACD,CAFD;EAIA,IAAIC,YAAY,GAAG,EAAnB;EACA,IAAIC,iBAAiB,GAAG,EAAxB;EACA,IAAIC,kBAAkB,GAAG,EAAzB;EAEAT,gBAAgB,CAACG,OAAjB,CAAyBC,OAAO,IAAI;IAClC,IAAIF,oBAAoB,CAACQ,QAArB,CAA8BN,OAAO,CAACE,IAAtC,CAAJ,EAAiD;MAC/CC,YAAY,CAACF,IAAb,CAAkBD,OAAO,CAACE,IAA1B;MACAE,iBAAiB,CAACH,IAAlB,CAAuBD,OAAO,CAACO,cAA/B;MACAF,kBAAkB,CAACJ,IAAnB,CAAwBD,OAAO,CAACQ,eAAhC;IACD;EAAC,CALJ;EAOA,IAAIC,aAAa,GAAG,CAClB,CAAC,kBAAD,EAAqB,oBAArB,EAA2C,qBAA3C,CADkB,CAApB;;EAGA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,gBAAgB,CAACe,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;IAChDD,aAAa,CAACR,IAAd,CAAmB,CAACE,YAAY,CAACO,CAAD,CAAb,EAAkBN,iBAAiB,CAACM,CAAD,CAAnC,EAAwCL,kBAAkB,CAACK,CAAD,CAA1D,CAAnB;EACD;;EACD,MAAME,YAAY,GAAG;IACnBC,KAAK,EAAE,uBADY;IAEnBC,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC;EAFW,CAArB;EAKA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MACE,KAAK,EAAC,MADR;MAEE,MAAM,EAAC,OAFT;MAGE,SAAS,EAAC,KAHZ;MAIE,MAAM,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJV;MAKE,IAAI,EAAEL,aALR;MAME,OAAO,EAAEG;IANX;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;KA5CelB,Y"},"metadata":{},"sourceType":"module"}